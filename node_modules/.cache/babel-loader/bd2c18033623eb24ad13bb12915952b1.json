{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rohan\\\\documents\\\\react\\\\learn-react\\\\src\\\\components\\\\Calculator.js\";\nimport React from \"react\";\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calculator, _React$Component);\n\n  function Calculator() {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this));\n    _this.state = {\n      displayText: \"\",\n      variableOne: 0,\n      variableTwo: 0,\n      action: \"\",\n      clear: false\n    };\n    _this.addToDisplay = _this.addToDisplay.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearDisplay = _this.clearDisplay.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.gcd = _this.gcd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.result = _this.result.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"addToDisplay\",\n    value: function addToDisplay(event) {\n      var innerText = event.target.innerText;\n      this.setState(function (prevState) {\n        if (prevState.clear) return {\n          displayText: innerText,\n          clear: false\n        };else return {\n          displayText: prevState.displayText + innerText\n        };\n      });\n    }\n  }, {\n    key: \"clearDisplay\",\n    value: function clearDisplay(event) {\n      this.setState({\n        displayText: \"\"\n      });\n    }\n  }, {\n    key: \"gcd\",\n    value: function gcd(event) {\n      this.setState(function (prevState) {\n        return {\n          variableOne: prevState.displayText,\n          displayText: \"\",\n          action: \"gcd\"\n        };\n      });\n    }\n  }, {\n    key: \"result\",\n    value: function result(event) {\n      this.setState(function (prevState) {\n        if (prevState.action === \"gcd\") {\n          var variableOne = parseInt(prevState.variableOne);\n          var variableTwo = parseInt(prevState.displayText);\n          var result = 1;\n\n          if (variableOne % variableTwo === 0) {\n            result = variableTwo;\n            return {\n              variableOne: 0,\n              displayText: result,\n              clear: true,\n              action: \"\"\n            };\n          } else if (variableTwo % variableOne === 0) {\n            result = variableOne;\n            return {\n              variableOne: 0,\n              displayText: result,\n              clear: true,\n              action: \"\"\n            };\n          } else {\n            var max = variableOne > variableTwo ? variableTwo : variableOne;\n\n            for (var i = 2; i <= max; i++) {\n              if (variableOne % i == 0 && variableTwo % i == 0) {\n                result *= i;\n              }\n            }\n          }\n\n          return {\n            variableOne: 0,\n            displayText: result,\n            clear: true,\n            action: \"\"\n          };\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.displayText,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"5\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"6\"), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"7\"), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"8\"), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"9\"), React.createElement(\"button\", {\n        onClick: this.addToDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.clearDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"C\"), React.createElement(\"button\", {\n        onClick: this.gcd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"GCD\"), React.createElement(\"button\", {\n        onClick: this.lcm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"LCM\"), React.createElement(\"button\", {\n        onClick: this.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"=\"));\n    }\n  }]);\n\n  return Calculator;\n}(React.Component);\n\nexport default Calculator;","map":{"version":3,"sources":["C:\\Users\\Rohan\\documents\\react\\learn-react\\src\\components\\Calculator.js"],"names":["React","Calculator","state","displayText","variableOne","variableTwo","action","clear","addToDisplay","bind","clearDisplay","gcd","result","event","innerText","target","setState","prevState","parseInt","max","i","lcm","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nclass Calculator extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state ={\r\n            displayText:\"\",\r\n            variableOne: 0,\r\n            variableTwo: 0,\r\n            action:\"\", \r\n            clear: false\r\n        }\r\n        this.addToDisplay = this.addToDisplay.bind(this)\r\n        this.clearDisplay = this.clearDisplay.bind(this)\r\n        this.gcd = this.gcd.bind(this)\r\n        this.result = this.result.bind(this)\r\n    }\r\n\r\n    addToDisplay(event) {\r\n        const {innerText} = event.target\r\n        this.setState((prevState) => {\r\n            if(prevState.clear)\r\n                return{\r\n                    displayText: innerText,\r\n                    clear: false\r\n                }\r\n            else   \r\n                return { displayText : prevState.displayText + innerText}\r\n    })\r\n    }\r\n\r\n    clearDisplay(event) {\r\n        this.setState({ \r\n            displayText : \"\"\r\n        })\r\n    }\r\n          \r\n    gcd(event) {\r\n        this.setState((prevState) => { \r\n            return{\r\n            variableOne: prevState.displayText,\r\n            displayText : \"\",\r\n            action: \"gcd\"\r\n            }\r\n        })\r\n    }\r\n\r\n    result(event) {\r\n        this.setState((prevState) => {\r\n            if(prevState.action === \"gcd\"){\r\n                let variableOne = parseInt(prevState.variableOne)\r\n                let variableTwo = parseInt(prevState.displayText)   \r\n                var result = 1\r\n                if (variableOne % variableTwo === 0) {\r\n                    result = variableTwo\r\n                    return{\r\n                        variableOne: 0,\r\n                        displayText : result,\r\n                        clear: true,\r\n                        action: \"\"\r\n                        }\r\n                }\r\n                else if (variableTwo % variableOne === 0) {\r\n                    result = variableOne\r\n                    return{\r\n                        variableOne: 0,\r\n                        displayText : result,\r\n                        clear: true,\r\n                        action: \"\"\r\n                        }\r\n                }\r\n                else {\r\n                    const max = variableOne > variableTwo? variableTwo : variableOne\r\n                    for(let i=2;i<= max; i++) {\r\n                        if(variableOne % i == 0 && variableTwo% i == 0) {\r\n                            result *= i\r\n                        }\r\n                    }\r\n                }\r\n                return{\r\n                    variableOne: 0,\r\n                    displayText : result,\r\n                    clear: true,\r\n                    action: \"\"\r\n                    }\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" value={this.state.displayText}\r\n                 readOnly></input>\r\n                 <br/>\r\n                <button onClick={this.addToDisplay}>1</button>\r\n                <button onClick={this.addToDisplay}>2</button>\r\n                <button onClick={this.addToDisplay}>3</button>\r\n                <button onClick={this.addToDisplay}>4</button>\r\n                <button onClick={this.addToDisplay}>5</button>\r\n                <br/>\r\n                <button onClick={this.addToDisplay}>6</button>\r\n                <button onClick={this.addToDisplay}>7</button>\r\n                <button onClick={this.addToDisplay}>8</button>\r\n                <button onClick={this.addToDisplay}>9</button>\r\n                <button onClick={this.addToDisplay}>0</button>\r\n                <br/>\r\n                <button onClick={this.clearDisplay}>C</button>\r\n                <button onClick={this.gcd}>GCD</button>\r\n                <button onClick={this.lcm}>LCM</button>\r\n                <button onClick={this.result}>=</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator"]},"metadata":{},"sourceType":"module"}