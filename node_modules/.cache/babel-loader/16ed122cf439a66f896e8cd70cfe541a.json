{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Rohan\\\\Documents\\\\React\\\\learn-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rohan\\\\documents\\\\react\\\\learn-react\\\\src\\\\components\\\\MemeGenerator.js\";\nimport React from 'react';\n\nvar MemeGenerator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MemeGenerator, _React$Component);\n\n  function MemeGenerator() {\n    var _this;\n\n    _classCallCheck(this, MemeGenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MemeGenerator).call(this));\n    _this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.genMeme = _this.genMeme.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MemeGenerator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.imgflip.com/get_memes\").then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var memes = response.data.memes;\n        console.log(memes);\n\n        _this2.setState({\n          allMemeImgs: memes\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"genMeme\",\n    value: function genMeme(event) {\n      this.setState(function (prevState) {\n        var url = prevState.allMemeImgs[2].url;\n        return {\n          randomImage: url\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"meme-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Top Text\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        value: this.state.topText,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Bottom Text\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        value: this.state.bottomText,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.genMeme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Gen\")), React.createElement(\"div\", {\n        class: \"meme\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.randomImage,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        className: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.topText), React.createElement(\"h2\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.bottomText)));\n    }\n  }]);\n\n  return MemeGenerator;\n}(React.Component);\n\nexport default MemeGenerator;","map":{"version":3,"sources":["C:\\Users\\Rohan\\documents\\react\\learn-react\\src\\components\\MemeGenerator.js"],"names":["React","MemeGenerator","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","genMeme","fetch","then","response","json","memes","data","console","log","setState","event","target","name","value","prevState","url","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,a;;;;;AACF,2BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAY;AACRC,MAAAA,OAAO,EAAC,EADA;AAERC,MAAAA,UAAU,EAAC,EAFH;AAGRC,MAAAA,WAAW,EAAE,+BAHL;AAIRC,MAAAA,WAAW,EAAE;AAJL,KAAZ;AAMA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,uDAAf;AATU;AAUb;;;;wCAEkB;AAAA;;AACfE,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAC,QAAQ,EAAI;AAAA,YACPE,KADO,GACEF,QAAQ,CAACG,IADX,CACPD,KADO;AAEdE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,QAAA,MAAI,CAACI,QAAL,CAAc;AAACZ,UAAAA,WAAW,EAACQ;AAAb,SAAd;AACH,OAND;AAOH;;;iCAEaK,K,EAAO;AAAA,0BACIA,KAAK,CAACC,MADV;AAAA,UACVC,IADU,iBACVA,IADU;AAAA,UACLC,KADK,iBACLA,KADK;AAEjB,WAAKJ,QAAL,qBACKG,IADL,EACaC,KADb;AAGH;;;4BAEOH,K,EAAM;AACV,WAAKD,QAAL,CAAc,UAAAK,SAAS,EAAI;AACvB,YAAMC,GAAG,GAAGD,SAAS,CAACjB,WAAV,CAAsB,CAAtB,EAAyBkB,GAArC;AACA,eAAO;AAACnB,UAAAA,WAAW,EAAEmB;AAAd,SAAP;AACH,OAHD;AAIH;;;6BAEQ;AACT,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,OAApD;AACC,QAAA,QAAQ,EAAE,KAAKI,YADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,YAAxB;AAAqC,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAAvD;AACC,QAAA,QAAQ,EAAE,KAAKG,YADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CANA,EAWA;AAAQ,QAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXA,CADI,EAcJ;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWG,WAArB;AAAkC,QAAA,GAAG,EAAC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAKH,KAAL,CAAWC,OAAhC,CAFJ,EAGI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKD,KAAL,CAAWE,UAAnC,CAHJ,CAdI,CAAR;AAoBH;;;;EA1D2BJ,KAAK,CAACyB,S;;AA6DlC,eAAexB,aAAf","sourcesContent":["import React from 'react'\r\n\r\nclass MemeGenerator extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state ={\r\n            topText:\"\",\r\n            bottomText:\"\",\r\n            randomImage: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.genMeme = this.genMeme.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response => { \r\n            const {memes} = response.data\r\n            console.log(memes)\r\n            this.setState({allMemeImgs:memes})\r\n        })\r\n    }\r\n\r\n     handleChange(event) {\r\n        const {name,value} = event.target\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    genMeme(event){\r\n        this.setState(prevState => {\r\n            const url = prevState.allMemeImgs[2].url\r\n            return {randomImage: url}\r\n        })\r\n    }\r\n\r\n    render() {\r\n    return (<div>\r\n        <form className=\"meme-form\">\r\n        <label>\r\n        Top Text\r\n        <input type=\"text\" name=\"topText\" value={this.state.topText}\r\n         onChange={this.handleChange}/>       \r\n        </label>\r\n        <label>\r\n        Bottom Text\r\n        <input type=\"text\" name=\"bottomText\" value={this.state.bottomText}\r\n         onChange={this.handleChange}/>\r\n        </label>\r\n        <button onClick={this.genMeme}>Gen</button>\r\n        </form>\r\n        <div class=\"meme\">\r\n            <img src={this.state.randomImage} alt=\"\" />\r\n            <h2 className=\"top\">{this.state.topText}</h2>\r\n            <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n        </div>\r\n    </div>)\r\n}\r\n}\r\n\r\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}